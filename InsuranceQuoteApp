using System;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Web.Mvc;

namespace InsuranceQuoteApp
{
    // ===== MODEL =====
    public class Insuree
    {
        public int Id { get; set; }

        [Required]
        public string FirstName { get; set; }

        [Required]
        public string LastName { get; set; }

        [Required]
        [EmailAddress]
        public string EmailAddress { get; set; }

        [Required]
        [DataType(DataType.Date)]
        public DateTime DateOfBirth { get; set; }

        [Required]
        public int CarYear { get; set; }

        [Required]
        public string CarMake { get; set; }

        [Required]
        public string CarModel { get; set; }

        [Required]
        public int SpeedingTickets { get; set; }

        [Required]
        public bool DUI { get; set; }

        [Required]
        public string CoverageType { get; set; } // Full or Liability

        public decimal Quote { get; set; }
    }

    // ===== DB CONTEXT =====
    public class ApplicationDbContext : DbContext
    {
        public ApplicationDbContext() : base("DefaultConnection") { }

        public DbSet<Insuree> Insurees { get; set; }
    }

    // ===== CONTROLLER =====
    public class InsureeController : Controller
    {
        private ApplicationDbContext db = new ApplicationDbContext();

        public ActionResult Create()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create(Insuree insuree)
        {
            if (ModelState.IsValid)
            {
                decimal quote = 50m;

                var today = DateTime.Today;
                int age = today.Year - insuree.DateOfBirth.Year;
                if (insuree.DateOfBirth > today.AddYears(-age)) age--;

                if (age <= 18)
                    quote += 100m;
                else if (age >= 19 && age <= 25)
                    quote += 50m;
                else
                    quote += 25m;

                if (insuree.CarYear < 2000)
                    quote += 25m;
                else if (insuree.CarYear > 2015)
                    quote += 25m;

                if (!string.IsNullOrWhiteSpace(insuree.CarMake) && insuree.CarMake.ToLower() == "porsche")
                {
                    quote += 25m;
                    if (!string.IsNullOrWhiteSpace(insuree.CarModel) && insuree.CarModel.ToLower() == "911 carrera")
                        quote += 25m;
                }

                quote += insuree.SpeedingTickets * 10m;

                if (insuree.DUI)
                    quote *= 1.25m;

                if (!string.IsNullOrWhiteSpace(insuree.CoverageType) && insuree.CoverageType.ToLower() == "full")
                    quote *= 1.5m;

                insuree.Quote = quote;

                db.Insurees.Add(insuree);
                db.SaveChanges();
                return RedirectToAction("Index");
            }

            return View(insuree);
        }

        public ActionResult Index()
        {
            var insurees = db.Insurees.ToList();
            return View(insurees);
        }

        public ActionResult Admin()
        {
            var insurees = db.Insurees.ToList();
            return View(insurees);
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                db.Dispose();
            }
            base.Dispose(disposing);
        }
    }

    // ====== VIEWS (Represented in Comments) ======

    /*
    // Create.cshtml
    @model InsuranceQuoteApp.Models.Insuree
    <form method="post">
        FirstName, LastName, EmailAddress, DateOfBirth, CarYear, CarMake, CarModel,
        SpeedingTickets, DUI (checkbox), CoverageType (dropdown)
        [Hidden field for Quote]
    </form>

    // Admin.cshtml
    @model IEnumerable<InsuranceQuoteApp.Models.Insuree>
    <table>
        <tr><th>First</th><th>Last</th><th>Email</th><th>Quote</th></tr>
        @foreach (var i in Model) {
            <tr><td>@i.FirstName</td><td>@i.LastName</td><td>@i.EmailAddress</td><td>@i.Quote.ToString("C")</td></tr>
        }
    </table>
    */

    /*
    // Web.config Connection String
    <connectionStrings>
        <add name="DefaultConnection"
             connectionString="Data Source=(LocalDb)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\InsuranceDb.mdf;Integrated Security=True"
             providerName="System.Data.SqlClient" />
    </connectionStrings>
    */
}
